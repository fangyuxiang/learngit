
1. 本地创建Git库并初始化
fyx@Joe MINGW64 /e/git_config_test
   $ git init
   Initialized empty Git repository in E:/git_config_test/.git/

2. 配置全局变量：用户名和密码

fyx@Joe MINGW64 /e/git_config_test/home (master)
   $ git config --global user.email "fyx123456@163.com"

fyx@Joe MINGW64 /e/git_config_test/home (master)
   $ git config --global user.name "fqy"

3. 全局变量配置成功的标志：可以正常提交代码到本地库。

fyx@Joe MINGW64 /e/git_config_test/home (master)
   $ git commit -m "add git_config_test.py for test"
	[master 7c0f4fb] add git_config_test.py for test
	1 file changed, 0 insertions(+), 0 deletions(-)
	create mode 100644 git_config-test.py
		（如果没有配置用户名或则密码会出现如下提示信息：
			fyx@Joe MINGW64 /e/git_config_test/home (master)
			$ git commit -m "add git_config_test.py for test"

			*** Please tell me who you are.

			Run

			git config --global user.email "you@example.com"
			git config --global user.name "Your Name"

			to set your account's default identity.
			Omit --global to set the identity only in this repository.

			fatal: unable to auto-detect email address (got 'fyx@Joe.(none)')	
		）

4. 本地创建分支并编辑。

fyx@Joe MINGW64 /e/git_config_test/home (master)
	$ git checkout -b dev
	Switched to a new branch 'dev'

fyx@Joe MINGW64 /e/git_config_test/home (dev)
	$ ls
	git_config-test.py  README.md

fyx@Joe MINGW64 /e/git_config_test/home (dev)
	$ touch hello.py

fyx@Joe MINGW64 /e/git_config_test/home (dev)
	$ git add hello.py

fyx@Joe MINGW64 /e/git_config_test/home (dev)
	$ git commit -m "add hello.py file"
	[dev c6b2ae6] add hello.py file
	1 file changed, 0 insertions(+), 0 deletions(-)
	create mode 100644 hello.py

fyx@Joe MINGW64 /e/git_config_test/home (dev)
	$ git stauts

5. git commit -a -m 与 git commit -am 的区别：
	a) git commit -a -m: 适用于文件未跟踪的，即还没有add到暂存区。
	b) git commit -am: 适用于于已跟踪的文件，即已经add到暂存区，对已有的文件进行修改后，直接更新即可。

6. 文件回退:
	a) 添加到暂存区，但还没有更新到本地库: 
		git reset HEAD filename
	b) 已更新到本地库，但是还没有更新到远程库： 
		step one: git reset --hard file_id  (从远程库拉到本地库)
		step two: git reset HEAD filename